---
- name: Debian - ensure firewalld is installed
  apt: 
    name: firewalld
    update_cache: yes
    cache_valid_time: 3600
    state: present
  tags: firewalld

- name: Debian - ensure firewalld is enabled and started
  service: 
    name: firewalld
    enabled: yes
    state: started
  tags: firewalld

- name: Debian - ensure ufw is stopped and disabled
  service: 
    name: ufw
    enabled: no
    state: stopped
  tags: firewalld

# - name: ensure rsyslog is installed
#   package: 
#     name: rsyslog
#     state: present

# - name: Copy rsyslog config to log iptables blocks to /var/log/firewall.log
#   template:
#     src: firewalld.rsyslog.j2
#     dest: /etc/rsyslog.d/20-firewalld.conf
#     owner:  root
#     group:  root
#     mode: 0644
#   notify: restart rsyslog

- name: Debian - Get current firewalld LogDenied value
  command: /usr/bin/firewall-cmd --get-log-denied
  register: LogDenied
  changed_when: false

- name: Debian - Set firewalld LogDenied to unicast
  command: /usr/bin/firewall-cmd --set-log-denied=unicast
  when: LogDenied.stdout != 'unicast'

- name: Debian - get firewalld default zone
  command: /usr/bin/firewall-cmd --get-default-zone
  register: defaultzone
  changed_when: false
  tags: firewalld

- name: Debian - set firewalld default zone
  command: /usr/bin/firewall-cmd --set-default-zone={{ default_zone | default('public') }}
  register: result
  when: defaultzone.stdout != default_zone
  changed_when: result.stdout == "success"
  tags: firewalld  

- name: Debian - Set zone interfaces
  firewalld:
    interface: "{{ item.interface }}"
    zone: "{{ item.zone | default(omit) }}"
    immediate: "{{ item.immediate | default(yes) }}"
    permanent: "{{ item.permanent | default(no) }}"
    state: "{{ item.state }}"
  with_items: "{{ firewalld_zone_interfaces | default([]) }}"

- name: Debian - set firewalld zone source
  firewalld:
    zone: "{{ item.0.zone }}"
    permanent: "{{ item.0.permanent|default('yes') }}"
    immediate: "{{ item.0.immediate|default('yes') }}"
    state: "{{ item.0.state|default('enabled') }}"
    source: "{{ item.1 }}"
  with_subelements:
    - "{{ firewalld_zone_source|default({}) }}"
    - "source"
  tags: firewalld

- name: Debian - set firewalld service rules
  firewalld:
    service: "{{ item.value.service | default(item.key) }}"
    permanent: "{{ item.value.permanent|default('true') }}"
    immediate: "{{ item.value.immediate|default('true') }}"
    state: "{{ item.value.state|default('enabled') }}"
    zone: "{{ item.value.zone|default('public') }}"
  with_dict: "{{ firewalld_service_rules|default({}) }}"
  tags: firewalld

- name: Debian - set firewalld port rules
  firewalld:
    port: "{{ item.value.port }}/{{ item.value.protocol|default('tcp') }}"
    permanent: "{{ item.value.permanent|default('true') }}"
    immediate: "{{ item.value.immediate|default('true') }}"
    state: "{{ item.value.state|default('enabled') }}"
    zone: "{{ item.value.zone|default('public') }}"
  with_dict: "{{ firewalld_port_rules|default({}) }}"
  tags: firewalld

- name: Debian - set firewalld rich rules
  firewalld:
    rich_rule: "{{ item.value.rule }}"
    permanent: "{{ item.value.permanent|default('true') }}"
    immediate: "{{ item.value.immediate|default('true') }}"
    state: "{{ item.value.state|default('enabled') }}"
    zone: "{{ item.value.zone|default('public') }}"
  with_dict: "{{ firewalld_rich_rules|default({}) }}"
  tags: firewalld
